
Starting test run with these Vim options:
vim --cmd 'set rtp=$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after | if exists("+packpath") | let &packpath = &rtp | endif' -N -u NORC -c 'set rtp& | if exists("+packpath") | set packpath& | endif' -f -i '~/.vimtestinfo' -n -es --cmd "let g:runVimTests='default'"

cwd001: Test that CWD is set to the test file's directory. 
1..1
ok 1 - CWD is test file's directory

signalError001: Test error signal to test driver.
ERROR
ERROR: This test does not test ABC.
OK (msgout)

signalSkip001: Test skip signal to test driver.
SKIP: Let us just forget about this one.

signalSkip002: Test skip(out) signal to test driver. 
SKIP (out): Lets just forget about the saved buffer contents.
OK (msgout)
1..1
ok 1 - all right

signalSkip003: Test skip(msgout) signal to test driver.
SKIP (msgout): Let us just forget about the captured messages.
OK (out)
1..1
ok 1 - all right

signalSkip004: Test skip(tap) signal to test driver.
SKIP (tap): Let us just forget about the TAP unit tests.
OK (out)
OK (msgout)

signalSkip005: Test skip all individual signals to test driver.
SKIP (out): Let us just forget about the saved buffer contents.
SKIP (msgout): Let us just forget about the captured messages.
SKIP (tap): Let us just forget about the TAP unit tests.

signalSkip006: Test convenience function vimtest#SkipAndQuitIf().
SKIP: Let us just forget about this one.

signalSkip007: Test inactive convenience function vimtest#SkipAndQuitIf().
FAIL (out): expected output           |   actual output
This is the expected result. 	      |	Can write what I want, does not matte
This should be in here!			This should be in here!
1..1
ok 1 - all right

tapParsing001: Test parsing corner cases of TAP tests. 
1..7
ok 1 - |all| -> right <-
ok 2 # SKIP all -> right <-
ok 3 # SKIP need (different) "arithmetics"
ok 4 # SKIP need (different) "arithmetics"
ok 5 - 1 == 1
ok 6 # SKIP need a (('nice' ^)) miracle&&hope||luck
ok 7 - matches

tapSkip001: Test skipping of some TAP tests. 
1..6
ok 1 - all right
ok 2 # SKIP need different arithmetics
ok 3 # SKIP need different arithmetics
ok 4 - 1 == 1
ok 5 # SKIP need a miracle
ok 6 - matches

tapSkip002: Test skipping all TAP tests by announcing this in the plan. 
1..0

tapSkip003: Test different skipping methods. 
ok 0 # SKIP foo
ok 1 # SKIP foo
ok 2 # SKIP fOO
not ok 3 - # SKIP foo
# Test '# SKIP foo' failed:
# expected: '0'
# but got:  '1'
1..0

tapTodo001: Test Todo of some TAP tests. 
1..7
ok 1 - all right
not ok 2 # TODO 1 == 2
# Test '1 == 2' failed:
# expected: '2'
# but got:  '1'
ok 3 # TODO 2 == 2
ok 4 - 1 == 1
ok 5 # TODO not yet implemented
# We will implement this one soon.
not ok 6 # TODO not right
ok 7 - matches

test001: Test successful saved buffer output. 
OK (out)

test002: Test failed saved buffer output. 
FAIL (out): expected output           |   actual output
Successful execution.		      |	Not what was expected.

test003: Test no buffer output was saved. 
ERROR (out): No test output.

test004:
OK (out)

test005: Test setting of test name and options. 
1..4
ok 1 - test options are defined
ok 2 - VIM mode is contained in test options
ok 3 - test name is defined
ok 4 - test name is script filespec

test011: Test successful message output. 
OK (msgout)

test012: Test failed message output. 
FAIL (msgout): The message assertion was not satisfied by the output: 
 --> Message assertion 1 from line 1 did not match in output lines 1-2
     Successful execution.$

test013: Test missing message output. 
ERROR: Could not capture message output.
ERROR (msgout): No test messages.

test014: Test empty message output. 
FAIL (msgout): The message assertion was not satisfied by the output: 
 --> Message assertion 1 from line 1 did not match in output line 1
     Successful execution.$

test021: Test successful TAP output. 
1..3
ok 1 - all right
ok 2 - 1 == 1
ok 3 - matches
# Some diagnostic message.

test022: Test failed TAP output. 
1..3
ok 1 - all right
not ok 2 - 1 == 2
# Test '1 == 2' failed:
# expected: '2'
# but got:  '1'
not ok 3 - matches
# Test 'matches' failed:
# got: 'F00bAr 2000'
# does not match: /fo\+.* \d\+/
# Some diagnostic message.

test023: Test TAP output with errors. 
1..3
ok 1 - all right
ok 2 - 1 == 1
ERROR (tap): Not all 3 planned tests have been executed, 1 test missed.

test024: Test TAP output with failures and too many tests. 
1..3
not ok 1 - not right
not ok 2 - 1 == 2
# Test '1 == 2' failed:
# expected: '2'
# but got:  '1'
ok 3 - matches
not ok 4 - one too many, even wrong
ok 5 - two too many
ERROR (tap): 2 more test executions than planned.

test025: Test successful TAP output without a plan. 
ok 0 - all right
ok 1 - 1 == 1
ok 2 - matches
ok 3 - also right

test031: Test successful combination buffer + message + TAP output. 
OK (out)
OK (msgout)
1..3
ok 1 - all right
ok 2 - 1 == 1
ok 3 - matches
# Some diagnostic message.

test032: Test failed combination buffer + message + TAP output. 
FAIL (out): expected output           |   actual output
Successful execution.		      |	Not what was expected. 
FAIL (msgout): The message assertion was not satisfied by the output: 
 --> Message assertion 1 from line 1 did not match in output lines 1-4
     Successful execution.$
1..3
not ok 1 - not right
not ok 2 - 1 == 2
# Test '1 == 2' failed:
# expected: '2'
# but got:  '1'
not ok 3 - matches
# Test 'matches' failed:
# got: 'F00bAr 2000'
# does not match: /fo\+.* \d\+/
# Some diagnostic message.

test033: Test error combination buffer + message + TAP output. 
ERROR: Could not capture message output.
ERROR (out): No test output.
ERROR (msgout): No test messages.
1..3
ok 1 - all right
not ok 2 - 1 == 2
# Test '1 == 2' failed:
# expected: '2'
# but got:  '1'
ERROR (tap): Not all 3 planned tests have been executed, 1 test missed.

test034: Test successful combination buffer + message output. 
OK (out)
OK (msgout)

test041: Test sourcing of local setup script. 
OK (msgout)
1..2
ok 1 - sourcing of local setup script
ok 2 - sourcing of local setup script

the test with spaces: Test with a testfile containing spaces. 
OK (out)
OK (msgout)

zzzSignalBailout001: Test bailout signal to test driver. 
BAIL OUT: It is so f...ed up!

35 files with 101 tests; 24 skipped, 70 run: 50 OK, 16 failures, 12 errors, 4 TODO.
Skipped tests: signalSkip001.vim signalSkip005.vim signalSkip006.vim tapSkip002.vim
Tests with skips: signalSkip002.vim signalSkip003.vim signalSkip004.vim tapParsing001.vim tapSkip001.vim tapSkip003.vim
Failed tests: signalSkip007.vim tapSkip003.vim test002.vim test012.vim test014.vim test022.vim test024.vim test032.vim test033.vim
Tests with errors: signalError001.vim test003.vim test013.vim test023.vim test024.vim test033.vim zzzSignalBailout001.vim
TODO tests: tapTodo001.vim
